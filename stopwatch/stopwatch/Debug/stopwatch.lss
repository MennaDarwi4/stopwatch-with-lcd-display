
stopwatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000006d2  00000766  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800064  00800064  0000076a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000076a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000079c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011b5  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e9  00000000  00000000  00001aa5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008d9  00000000  00000000  0000238e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00002c68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e3  00000000  00000000  00002ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009be  00000000  00000000  000034ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003e69  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 81 02 	jmp	0x502	; 0x502 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 69 02 	call	0x4d2	; 0x4d2 <main>
  8a:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_Vid_Set_Pin_Dir>:
		   
	   }
	
	
	return LOC_u8_VAL ;
}
  92:	42 30       	cpi	r20, 0x02	; 2
  94:	08 f0       	brcs	.+2      	; 0x98 <DIO_Vid_Set_Pin_Dir+0x6>
  96:	6d c0       	rjmp	.+218    	; 0x172 <DIO_Vid_Set_Pin_Dir+0xe0>
  98:	41 30       	cpi	r20, 0x01	; 1
  9a:	a1 f5       	brne	.+104    	; 0x104 <DIO_Vid_Set_Pin_Dir+0x72>
  9c:	81 30       	cpi	r24, 0x01	; 1
  9e:	89 f0       	breq	.+34     	; 0xc2 <DIO_Vid_Set_Pin_Dir+0x30>
  a0:	28 f0       	brcs	.+10     	; 0xac <DIO_Vid_Set_Pin_Dir+0x1a>
  a2:	82 30       	cpi	r24, 0x02	; 2
  a4:	c9 f0       	breq	.+50     	; 0xd8 <DIO_Vid_Set_Pin_Dir+0x46>
  a6:	83 30       	cpi	r24, 0x03	; 3
  a8:	11 f1       	breq	.+68     	; 0xee <DIO_Vid_Set_Pin_Dir+0x5c>
  aa:	08 95       	ret
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_Vid_Set_Pin_Dir+0x26>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_Vid_Set_Pin_Dir+0x22>
  bc:	82 2b       	or	r24, r18
  be:	8a bb       	out	0x1a, r24	; 26
  c0:	08 95       	ret
  c2:	27 b3       	in	r18, 0x17	; 23
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_Vid_Set_Pin_Dir+0x3c>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_Vid_Set_Pin_Dir+0x38>
  d2:	82 2b       	or	r24, r18
  d4:	87 bb       	out	0x17, r24	; 23
  d6:	08 95       	ret
  d8:	24 b3       	in	r18, 0x14	; 20
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <DIO_Vid_Set_Pin_Dir+0x52>
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <DIO_Vid_Set_Pin_Dir+0x4e>
  e8:	82 2b       	or	r24, r18
  ea:	84 bb       	out	0x14, r24	; 20
  ec:	08 95       	ret
  ee:	21 b3       	in	r18, 0x11	; 17
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_Vid_Set_Pin_Dir+0x68>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_Vid_Set_Pin_Dir+0x64>
  fe:	82 2b       	or	r24, r18
 100:	81 bb       	out	0x11, r24	; 17
 102:	08 95       	ret
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	91 f0       	breq	.+36     	; 0x12c <DIO_Vid_Set_Pin_Dir+0x9a>
 108:	28 f0       	brcs	.+10     	; 0x114 <DIO_Vid_Set_Pin_Dir+0x82>
 10a:	82 30       	cpi	r24, 0x02	; 2
 10c:	d9 f0       	breq	.+54     	; 0x144 <DIO_Vid_Set_Pin_Dir+0xb2>
 10e:	83 30       	cpi	r24, 0x03	; 3
 110:	29 f1       	breq	.+74     	; 0x15c <DIO_Vid_Set_Pin_Dir+0xca>
 112:	08 95       	ret
 114:	2a b3       	in	r18, 0x1a	; 26
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_Vid_Set_Pin_Dir+0x8e>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_Vid_Set_Pin_Dir+0x8a>
 124:	80 95       	com	r24
 126:	82 23       	and	r24, r18
 128:	8a bb       	out	0x1a, r24	; 26
 12a:	08 95       	ret
 12c:	27 b3       	in	r18, 0x17	; 23
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	02 c0       	rjmp	.+4      	; 0x138 <DIO_Vid_Set_Pin_Dir+0xa6>
 134:	88 0f       	add	r24, r24
 136:	99 1f       	adc	r25, r25
 138:	6a 95       	dec	r22
 13a:	e2 f7       	brpl	.-8      	; 0x134 <DIO_Vid_Set_Pin_Dir+0xa2>
 13c:	80 95       	com	r24
 13e:	82 23       	and	r24, r18
 140:	87 bb       	out	0x17, r24	; 23
 142:	08 95       	ret
 144:	24 b3       	in	r18, 0x14	; 20
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_Vid_Set_Pin_Dir+0xbe>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_Vid_Set_Pin_Dir+0xba>
 154:	80 95       	com	r24
 156:	82 23       	and	r24, r18
 158:	84 bb       	out	0x14, r24	; 20
 15a:	08 95       	ret
 15c:	21 b3       	in	r18, 0x11	; 17
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_Vid_Set_Pin_Dir+0xd6>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_Vid_Set_Pin_Dir+0xd2>
 16c:	80 95       	com	r24
 16e:	82 23       	and	r24, r18
 170:	81 bb       	out	0x11, r24	; 17
 172:	08 95       	ret

00000174 <DIO_Vid_Set_Pin_Val>:
 174:	42 30       	cpi	r20, 0x02	; 2
 176:	08 f0       	brcs	.+2      	; 0x17a <DIO_Vid_Set_Pin_Val+0x6>
 178:	6d c0       	rjmp	.+218    	; 0x254 <DIO_Vid_Set_Pin_Val+0xe0>
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	a1 f5       	brne	.+104    	; 0x1e6 <DIO_Vid_Set_Pin_Val+0x72>
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	89 f0       	breq	.+34     	; 0x1a4 <DIO_Vid_Set_Pin_Val+0x30>
 182:	28 f0       	brcs	.+10     	; 0x18e <DIO_Vid_Set_Pin_Val+0x1a>
 184:	82 30       	cpi	r24, 0x02	; 2
 186:	c9 f0       	breq	.+50     	; 0x1ba <DIO_Vid_Set_Pin_Val+0x46>
 188:	83 30       	cpi	r24, 0x03	; 3
 18a:	11 f1       	breq	.+68     	; 0x1d0 <DIO_Vid_Set_Pin_Val+0x5c>
 18c:	08 95       	ret
 18e:	2b b3       	in	r18, 0x1b	; 27
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_Vid_Set_Pin_Val+0x26>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_Vid_Set_Pin_Val+0x22>
 19e:	82 2b       	or	r24, r18
 1a0:	8b bb       	out	0x1b, r24	; 27
 1a2:	08 95       	ret
 1a4:	28 b3       	in	r18, 0x18	; 24
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_Vid_Set_Pin_Val+0x3c>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_Vid_Set_Pin_Val+0x38>
 1b4:	82 2b       	or	r24, r18
 1b6:	88 bb       	out	0x18, r24	; 24
 1b8:	08 95       	ret
 1ba:	25 b3       	in	r18, 0x15	; 21
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_Vid_Set_Pin_Val+0x52>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_Vid_Set_Pin_Val+0x4e>
 1ca:	82 2b       	or	r24, r18
 1cc:	85 bb       	out	0x15, r24	; 21
 1ce:	08 95       	ret
 1d0:	22 b3       	in	r18, 0x12	; 18
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_Vid_Set_Pin_Val+0x68>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_Vid_Set_Pin_Val+0x64>
 1e0:	82 2b       	or	r24, r18
 1e2:	82 bb       	out	0x12, r24	; 18
 1e4:	08 95       	ret
 1e6:	81 30       	cpi	r24, 0x01	; 1
 1e8:	91 f0       	breq	.+36     	; 0x20e <DIO_Vid_Set_Pin_Val+0x9a>
 1ea:	28 f0       	brcs	.+10     	; 0x1f6 <DIO_Vid_Set_Pin_Val+0x82>
 1ec:	82 30       	cpi	r24, 0x02	; 2
 1ee:	d9 f0       	breq	.+54     	; 0x226 <DIO_Vid_Set_Pin_Val+0xb2>
 1f0:	83 30       	cpi	r24, 0x03	; 3
 1f2:	29 f1       	breq	.+74     	; 0x23e <DIO_Vid_Set_Pin_Val+0xca>
 1f4:	08 95       	ret
 1f6:	2b b3       	in	r18, 0x1b	; 27
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_Vid_Set_Pin_Val+0x8e>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	6a 95       	dec	r22
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_Vid_Set_Pin_Val+0x8a>
 206:	80 95       	com	r24
 208:	82 23       	and	r24, r18
 20a:	8b bb       	out	0x1b, r24	; 27
 20c:	08 95       	ret
 20e:	28 b3       	in	r18, 0x18	; 24
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_Vid_Set_Pin_Val+0xa6>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_Vid_Set_Pin_Val+0xa2>
 21e:	80 95       	com	r24
 220:	82 23       	and	r24, r18
 222:	88 bb       	out	0x18, r24	; 24
 224:	08 95       	ret
 226:	25 b3       	in	r18, 0x15	; 21
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_Vid_Set_Pin_Val+0xbe>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_Vid_Set_Pin_Val+0xba>
 236:	80 95       	com	r24
 238:	82 23       	and	r24, r18
 23a:	85 bb       	out	0x15, r24	; 21
 23c:	08 95       	ret
 23e:	22 b3       	in	r18, 0x12	; 18
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_Vid_Set_Pin_Val+0xd6>
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	6a 95       	dec	r22
 24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_Vid_Set_Pin_Val+0xd2>
 24e:	80 95       	com	r24
 250:	82 23       	and	r24, r18
 252:	82 bb       	out	0x12, r24	; 18
 254:	08 95       	ret

00000256 <DIO_Vid_Set_Port_Dir>:

void DIO_Vid_Set_Port_Dir(u8 copy_u8_port , u8 copy_u8_dir){
	
	if(copy_u8_dir==PORT_OUTPUT){
 256:	6f 3f       	cpi	r22, 0xFF	; 255
 258:	a1 f4       	brne	.+40     	; 0x282 <DIO_Vid_Set_Port_Dir+0x2c>
	switch(copy_u8_port){
 25a:	81 30       	cpi	r24, 0x01	; 1
 25c:	49 f0       	breq	.+18     	; 0x270 <DIO_Vid_Set_Port_Dir+0x1a>
 25e:	28 f0       	brcs	.+10     	; 0x26a <DIO_Vid_Set_Port_Dir+0x14>
 260:	82 30       	cpi	r24, 0x02	; 2
 262:	49 f0       	breq	.+18     	; 0x276 <DIO_Vid_Set_Port_Dir+0x20>
 264:	83 30       	cpi	r24, 0x03	; 3
 266:	51 f0       	breq	.+20     	; 0x27c <DIO_Vid_Set_Port_Dir+0x26>
 268:	08 95       	ret
		
		case PORTA : DDRA_REG=PORT_OUTPUT;break ; 
 26a:	8f ef       	ldi	r24, 0xFF	; 255
 26c:	8a bb       	out	0x1a, r24	; 26
 26e:	08 95       	ret
		case PORTB:  DDRB_REG=PORT_OUTPUT;break ;
 270:	8f ef       	ldi	r24, 0xFF	; 255
 272:	87 bb       	out	0x17, r24	; 23
 274:	08 95       	ret
		case PORTC : DDRC_REG=PORT_OUTPUT;break ;
 276:	8f ef       	ldi	r24, 0xFF	; 255
 278:	84 bb       	out	0x14, r24	; 20
 27a:	08 95       	ret
		case PORTD : DDRD_REG=PORT_OUTPUT;break ;
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	81 bb       	out	0x11, r24	; 17
 280:	08 95       	ret
		
	}
	}
	else{
		switch(copy_u8_port){
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	41 f0       	breq	.+16     	; 0x296 <DIO_Vid_Set_Port_Dir+0x40>
 286:	28 f0       	brcs	.+10     	; 0x292 <DIO_Vid_Set_Port_Dir+0x3c>
 288:	82 30       	cpi	r24, 0x02	; 2
 28a:	39 f0       	breq	.+14     	; 0x29a <DIO_Vid_Set_Port_Dir+0x44>
 28c:	83 30       	cpi	r24, 0x03	; 3
 28e:	39 f0       	breq	.+14     	; 0x29e <DIO_Vid_Set_Port_Dir+0x48>
 290:	08 95       	ret
			
			case PORTA : DDRA_REG=PORT_INPUT;break ;
 292:	1a ba       	out	0x1a, r1	; 26
 294:	08 95       	ret
			case PORTB:  DDRB_REG=PORT_INPUT;break ;
 296:	17 ba       	out	0x17, r1	; 23
 298:	08 95       	ret
			case PORTC : DDRC_REG=PORT_INPUT;break ;
 29a:	14 ba       	out	0x14, r1	; 20
 29c:	08 95       	ret
			case PORTD : DDRD_REG=PORT_INPUT;break ;
 29e:	11 ba       	out	0x11, r1	; 17
 2a0:	08 95       	ret

000002a2 <GIE_Vid_Interrupt_Enable>:
#include"GIE_privte.h" 


void GIE_Vid_Interrupt_Enable(){
	
	SET_BIT(SREG_REG,7) ;
 2a2:	8f b7       	in	r24, 0x3f	; 63
 2a4:	80 68       	ori	r24, 0x80	; 128
 2a6:	8f bf       	out	0x3f, r24	; 63
 2a8:	08 95       	ret

000002aa <SHDATA>:
		LCD_Vid_Send_Data(copy_u8_data[loc_u8_in]);
	}
	/*back to DDRAM to display data*/
	LCD_Vid_GOTOXY(copy_u8_x,copy_u8_y);
	LCD_Vid_Send_Data(copy_u8_pattern);
}
 2aa:	0f 93       	push	r16
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	00 d0       	rcall	.+0      	; 0x2b4 <SHDATA+0xa>
 2b4:	00 d0       	rcall	.+0      	; 0x2b6 <SHDATA+0xc>
 2b6:	cd b7       	in	r28, 0x3d	; 61
 2b8:	de b7       	in	r29, 0x3e	; 62
 2ba:	08 2f       	mov	r16, r24
 2bc:	84 e0       	ldi	r24, 0x04	; 4
 2be:	89 83       	std	Y+1, r24	; 0x01
 2c0:	85 e0       	ldi	r24, 0x05	; 5
 2c2:	8a 83       	std	Y+2, r24	; 0x02
 2c4:	86 e0       	ldi	r24, 0x06	; 6
 2c6:	8b 83       	std	Y+3, r24	; 0x03
 2c8:	87 e0       	ldi	r24, 0x07	; 7
 2ca:	8c 83       	std	Y+4, r24	; 0x04
 2cc:	10 e0       	ldi	r17, 0x00	; 0
 2ce:	14 c0       	rjmp	.+40     	; 0x2f8 <SHDATA+0x4e>
 2d0:	40 2f       	mov	r20, r16
 2d2:	50 e0       	ldi	r21, 0x00	; 0
 2d4:	01 2e       	mov	r0, r17
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <SHDATA+0x32>
 2d8:	55 95       	asr	r21
 2da:	47 95       	ror	r20
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <SHDATA+0x2e>
 2e0:	41 70       	andi	r20, 0x01	; 1
 2e2:	e1 e0       	ldi	r30, 0x01	; 1
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	ec 0f       	add	r30, r28
 2e8:	fd 1f       	adc	r31, r29
 2ea:	e1 0f       	add	r30, r17
 2ec:	f1 1d       	adc	r31, r1
 2ee:	60 81       	ld	r22, Z
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 2f6:	1f 5f       	subi	r17, 0xFF	; 255
 2f8:	14 30       	cpi	r17, 0x04	; 4
 2fa:	50 f3       	brcs	.-44     	; 0x2d0 <SHDATA+0x26>
 2fc:	0f 90       	pop	r0
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
 302:	0f 90       	pop	r0
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	1f 91       	pop	r17
 30a:	0f 91       	pop	r16
 30c:	08 95       	ret

0000030e <Send_Enable>:
 30e:	41 e0       	ldi	r20, 0x01	; 1
 310:	63 e0       	ldi	r22, 0x03	; 3
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 318:	8f e3       	ldi	r24, 0x3F	; 63
 31a:	9f e1       	ldi	r25, 0x1F	; 31
 31c:	01 97       	sbiw	r24, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <Send_Enable+0xe>
 320:	00 c0       	rjmp	.+0      	; 0x322 <Send_Enable+0x14>
 322:	00 00       	nop
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	63 e0       	ldi	r22, 0x03	; 3
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 32e:	08 95       	ret

00000330 <LCD_Vid_Send_Command>:
 330:	cf 93       	push	r28
 332:	c8 2f       	mov	r28, r24
 334:	40 e0       	ldi	r20, 0x00	; 0
 336:	61 e0       	ldi	r22, 0x01	; 1
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	62 e0       	ldi	r22, 0x02	; 2
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 348:	8c 2f       	mov	r24, r28
 34a:	82 95       	swap	r24
 34c:	8f 70       	andi	r24, 0x0F	; 15
 34e:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 352:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 356:	8c 2f       	mov	r24, r28
 358:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 35c:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 360:	cf 91       	pop	r28
 362:	08 95       	ret

00000364 <LCD_Vid_Send_Data>:
 364:	cf 93       	push	r28
 366:	c8 2f       	mov	r28, r24
 368:	41 e0       	ldi	r20, 0x01	; 1
 36a:	61 e0       	ldi	r22, 0x01	; 1
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 372:	40 e0       	ldi	r20, 0x00	; 0
 374:	62 e0       	ldi	r22, 0x02	; 2
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Vid_Set_Pin_Val>
 37c:	8c 2f       	mov	r24, r28
 37e:	82 95       	swap	r24
 380:	8f 70       	andi	r24, 0x0F	; 15
 382:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 386:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 38a:	8c 2f       	mov	r24, r28
 38c:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 390:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <LCD_Vid_Init>:
 398:	2f ef       	ldi	r18, 0xFF	; 255
 39a:	83 ef       	ldi	r24, 0xF3	; 243
 39c:	91 e0       	ldi	r25, 0x01	; 1
 39e:	21 50       	subi	r18, 0x01	; 1
 3a0:	80 40       	sbci	r24, 0x00	; 0
 3a2:	90 40       	sbci	r25, 0x00	; 0
 3a4:	e1 f7       	brne	.-8      	; 0x39e <LCD_Vid_Init+0x6>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <LCD_Vid_Init+0x10>
 3a8:	00 00       	nop
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 3b0:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 3b4:	82 e0       	ldi	r24, 0x02	; 2
 3b6:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 3ba:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 3be:	88 e0       	ldi	r24, 0x08	; 8
 3c0:	0e 94 55 01 	call	0x2aa	; 0x2aa <SHDATA>
 3c4:	0e 94 87 01 	call	0x30e	; 0x30e <Send_Enable>
 3c8:	8c e0       	ldi	r24, 0x0C	; 12
 3ca:	0e 94 98 01 	call	0x330	; 0x330 <LCD_Vid_Send_Command>
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	0e 94 98 01 	call	0x330	; 0x330 <LCD_Vid_Send_Command>
 3d4:	08 95       	ret

000003d6 <LCD_Vid_Send_String>:
 3d6:	0f 93       	push	r16
 3d8:	1f 93       	push	r17
 3da:	cf 93       	push	r28
 3dc:	8c 01       	movw	r16, r24
 3de:	c0 e0       	ldi	r28, 0x00	; 0
 3e0:	03 c0       	rjmp	.+6      	; 0x3e8 <LCD_Vid_Send_String+0x12>
 3e2:	0e 94 b2 01 	call	0x364	; 0x364 <LCD_Vid_Send_Data>
 3e6:	cf 5f       	subi	r28, 0xFF	; 255
 3e8:	f8 01       	movw	r30, r16
 3ea:	ec 0f       	add	r30, r28
 3ec:	f1 1d       	adc	r31, r1
 3ee:	80 81       	ld	r24, Z
 3f0:	81 11       	cpse	r24, r1
 3f2:	f7 cf       	rjmp	.-18     	; 0x3e2 <LCD_Vid_Send_String+0xc>
 3f4:	cf 91       	pop	r28
 3f6:	1f 91       	pop	r17
 3f8:	0f 91       	pop	r16
 3fa:	08 95       	ret

000003fc <LCD_Vid_GOTOXY>:
 3fc:	66 23       	and	r22, r22
 3fe:	29 f0       	breq	.+10     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 400:	61 30       	cpi	r22, 0x01	; 1
 402:	11 f4       	brne	.+4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 404:	80 5c       	subi	r24, 0xC0	; 192
 406:	01 c0       	rjmp	.+2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	80 68       	ori	r24, 0x80	; 128
 40c:	0e 94 98 01 	call	0x330	; 0x330 <LCD_Vid_Send_Command>
 410:	08 95       	ret

00000412 <LCD_Vid_Send_Number>:
void LCD_Vid_Send_Number(u32 copy_u32_number){
 412:	1f 93       	push	r17
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	2a 97       	sbiw	r28, 0x0a	; 10
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	de bf       	out	0x3e, r29	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	cd bf       	out	0x3d, r28	; 61
 428:	ac 01       	movw	r20, r24
	
	s8 i=0;
	u8 array[10];
	if(copy_u32_number==0)
 42a:	89 2b       	or	r24, r25
 42c:	a1 f5       	brne	.+104    	; 0x496 <LCD_Vid_Send_Number+0x84>
	{
		LCD_Vid_Send_Data('0');
 42e:	80 e3       	ldi	r24, 0x30	; 48
 430:	0e 94 b2 01 	call	0x364	; 0x364 <LCD_Vid_Send_Data>
 434:	44 c0       	rjmp	.+136    	; 0x4be <LCD_Vid_Send_Number+0xac>
		return ;
	}
	for(i=0 ; copy_u32_number!=0 ; i++){
		array[i]=copy_u32_number %10 +48;
 436:	9a 01       	movw	r18, r20
 438:	ad ec       	ldi	r26, 0xCD	; 205
 43a:	bc ec       	ldi	r27, 0xCC	; 204
 43c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__umulhisi3>
 440:	96 95       	lsr	r25
 442:	87 95       	ror	r24
 444:	96 95       	lsr	r25
 446:	87 95       	ror	r24
 448:	96 95       	lsr	r25
 44a:	87 95       	ror	r24
 44c:	9c 01       	movw	r18, r24
 44e:	22 0f       	add	r18, r18
 450:	33 1f       	adc	r19, r19
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	88 0f       	add	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	82 0f       	add	r24, r18
 460:	93 1f       	adc	r25, r19
 462:	9a 01       	movw	r18, r20
 464:	28 1b       	sub	r18, r24
 466:	39 0b       	sbc	r19, r25
 468:	c9 01       	movw	r24, r18
 46a:	e1 e0       	ldi	r30, 0x01	; 1
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	ec 0f       	add	r30, r28
 470:	fd 1f       	adc	r31, r29
 472:	e1 0f       	add	r30, r17
 474:	f1 1d       	adc	r31, r1
 476:	17 fd       	sbrc	r17, 7
 478:	fa 95       	dec	r31
 47a:	80 5d       	subi	r24, 0xD0	; 208
 47c:	80 83       	st	Z, r24
		copy_u32_number /=10;
 47e:	9a 01       	movw	r18, r20
 480:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__umulhisi3>
 484:	ac 01       	movw	r20, r24
 486:	56 95       	lsr	r21
 488:	47 95       	ror	r20
 48a:	56 95       	lsr	r21
 48c:	47 95       	ror	r20
 48e:	56 95       	lsr	r21
 490:	47 95       	ror	r20
	if(copy_u32_number==0)
	{
		LCD_Vid_Send_Data('0');
		return ;
	}
	for(i=0 ; copy_u32_number!=0 ; i++){
 492:	1f 5f       	subi	r17, 0xFF	; 255
 494:	01 c0       	rjmp	.+2      	; 0x498 <LCD_Vid_Send_Number+0x86>
 496:	10 e0       	ldi	r17, 0x00	; 0
 498:	41 15       	cp	r20, r1
 49a:	51 05       	cpc	r21, r1
 49c:	61 f6       	brne	.-104    	; 0x436 <LCD_Vid_Send_Number+0x24>
		array[i]=copy_u32_number %10 +48;
		copy_u32_number /=10;
	}
	i--;
 49e:	11 50       	subi	r17, 0x01	; 1
	while (i>=0)
 4a0:	0c c0       	rjmp	.+24     	; 0x4ba <LCD_Vid_Send_Number+0xa8>
	{
		LCD_Vid_Send_Data(array[i]);
 4a2:	e1 e0       	ldi	r30, 0x01	; 1
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	ec 0f       	add	r30, r28
 4a8:	fd 1f       	adc	r31, r29
 4aa:	e1 0f       	add	r30, r17
 4ac:	f1 1d       	adc	r31, r1
 4ae:	17 fd       	sbrc	r17, 7
 4b0:	fa 95       	dec	r31
 4b2:	80 81       	ld	r24, Z
 4b4:	0e 94 b2 01 	call	0x364	; 0x364 <LCD_Vid_Send_Data>
		i--;
 4b8:	11 50       	subi	r17, 0x01	; 1
	for(i=0 ; copy_u32_number!=0 ; i++){
		array[i]=copy_u32_number %10 +48;
		copy_u32_number /=10;
	}
	i--;
	while (i>=0)
 4ba:	11 23       	and	r17, r17
 4bc:	94 f7       	brge	.-28     	; 0x4a2 <LCD_Vid_Send_Number+0x90>
	{
		LCD_Vid_Send_Data(array[i]);
		i--;
	}
 4be:	2a 96       	adiw	r28, 0x0a	; 10
 4c0:	0f b6       	in	r0, 0x3f	; 63
 4c2:	f8 94       	cli
 4c4:	de bf       	out	0x3e, r29	; 62
 4c6:	0f be       	out	0x3f, r0	; 63
 4c8:	cd bf       	out	0x3d, r28	; 61
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	1f 91       	pop	r17
 4d0:	08 95       	ret

000004d2 <main>:
int main(void)
{
	
	   
	/*  set data port --> output  */
	DIO_Vid_Set_Port_Dir(LCD_DPORT,PORT_OUTPUT) ;
 4d2:	6f ef       	ldi	r22, 0xFF	; 255
 4d4:	80 e0       	ldi	r24, 0x00	; 0
 4d6:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_Vid_Set_Port_Dir>
	/* set control pins --> output */
	DIO_Vid_Set_Pin_Dir(LCD_CPORT,LCD_RS_PIN,OUTPUT) ;
 4da:	41 e0       	ldi	r20, 0x01	; 1
 4dc:	61 e0       	ldi	r22, 0x01	; 1
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	0e 94 49 00 	call	0x92	; 0x92 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(LCD_CPORT,LCD_RW_PIN,OUTPUT) ;
 4e4:	41 e0       	ldi	r20, 0x01	; 1
 4e6:	62 e0       	ldi	r22, 0x02	; 2
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	0e 94 49 00 	call	0x92	; 0x92 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(LCD_CPORT,LCD_EN_PIN,OUTPUT) ;
 4ee:	41 e0       	ldi	r20, 0x01	; 1
 4f0:	63 e0       	ldi	r22, 0x03	; 3
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	0e 94 49 00 	call	0x92	; 0x92 <DIO_Vid_Set_Pin_Dir>
	
	LCD_Vid_Init() ;
 4f8:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_Vid_Init>
    TIM0_Vid_Init() ;
 4fc:	0e 94 4c 03 	call	0x698	; 0x698 <TIM0_Vid_Init>
 500:	ff cf       	rjmp	.-2      	; 0x500 <main+0x2e>

00000502 <__vector_11>:
    {
		

    }
}
ISR(TIMER0_OVF){
 502:	1f 92       	push	r1
 504:	0f 92       	push	r0
 506:	0f b6       	in	r0, 0x3f	; 63
 508:	0f 92       	push	r0
 50a:	11 24       	eor	r1, r1
 50c:	2f 93       	push	r18
 50e:	3f 93       	push	r19
 510:	4f 93       	push	r20
 512:	5f 93       	push	r21
 514:	6f 93       	push	r22
 516:	7f 93       	push	r23
 518:	8f 93       	push	r24
 51a:	9f 93       	push	r25
 51c:	af 93       	push	r26
 51e:	bf 93       	push	r27
 520:	ef 93       	push	r30
 522:	ff 93       	push	r31
	static u8 i=10;
	static u8 j=7;
	static u8 k=4;
	count++ ;
 524:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <count>
 528:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <count+0x1>
 52c:	01 96       	adiw	r24, 0x01	; 1
 52e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <count+0x1>
 532:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <count>
	
	if(count==10){
 536:	0a 97       	sbiw	r24, 0x0a	; 10
 538:	09 f0       	breq	.+2      	; 0x53c <__vector_11+0x3a>
 53a:	93 c0       	rjmp	.+294    	; 0x662 <__vector_11+0x160>
		 
		   LCD_Vid_GOTOXY(3,0);
 53c:	60 e0       	ldi	r22, 0x00	; 0
 53e:	83 e0       	ldi	r24, 0x03	; 3
 540:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
		   LCD_Vid_Send_Number(0);
 544:	80 e0       	ldi	r24, 0x00	; 0
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
		   LCD_Vid_Send_Number(hr);
 54c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <hr>
 550:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <hr+0x1>
 554:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
		   LCD_Vid_Send_String(":");
 558:	82 e6       	ldi	r24, 0x62	; 98
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCD_Vid_Send_String>
		   LCD_Vid_Send_Number(0);
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
		   LCD_Vid_GOTOXY(j,0);
 568:	60 e0       	ldi	r22, 0x00	; 0
 56a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <j.1635>
 56e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
		   LCD_Vid_Send_Number(min);
 572:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <min>
 576:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <min+0x1>
 57a:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
		   LCD_Vid_Send_String(":");
 57e:	82 e6       	ldi	r24, 0x62	; 98
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCD_Vid_Send_String>
		   LCD_Vid_Send_Number(0);
 586:	80 e0       	ldi	r24, 0x00	; 0
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
		   LCD_Vid_GOTOXY(i,0);
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 594:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
		   LCD_Vid_Send_Number(sec);
 598:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 59c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 5a0:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
	     sec++;
 5a4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 5a8:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 5ac:	01 96       	adiw	r24, 0x01	; 1
 5ae:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__data_end+0x1>
 5b2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
	if(sec>9){
 5b6:	8a 30       	cpi	r24, 0x0A	; 10
 5b8:	91 05       	cpc	r25, r1
 5ba:	0c f4       	brge	.+2      	; 0x5be <__vector_11+0xbc>
 5bc:	52 c0       	rjmp	.+164    	; 0x662 <__vector_11+0x160>
		i=9;
 5be:	29 e0       	ldi	r18, 0x09	; 9
 5c0:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
		if(sec==61){
 5c4:	cd 97       	sbiw	r24, 0x3d	; 61
 5c6:	09 f0       	breq	.+2      	; 0x5ca <__vector_11+0xc8>
 5c8:	4c c0       	rjmp	.+152    	; 0x662 <__vector_11+0x160>
			
			sec=0;
 5ca:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x1>
 5ce:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
			i=9;
			LCD_Vid_GOTOXY(i,0);
 5d2:	60 e0       	ldi	r22, 0x00	; 0
 5d4:	89 e0       	ldi	r24, 0x09	; 9
 5d6:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
		    LCD_Vid_Send_Number(0);
 5da:	80 e0       	ldi	r24, 0x00	; 0
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
			LCD_Vid_GOTOXY(i+1,0);
 5e2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	8f 5f       	subi	r24, 0xFF	; 255
 5ea:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
			LCD_Vid_Send_Number(0);
 5ee:	80 e0       	ldi	r24, 0x00	; 0
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
			min++;
 5f6:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <min>
 5fa:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <min+0x1>
 5fe:	01 96       	adiw	r24, 0x01	; 1
 600:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <min+0x1>
 604:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <min>
			if(min>9){
 608:	8a 30       	cpi	r24, 0x0A	; 10
 60a:	91 05       	cpc	r25, r1
 60c:	3c f1       	brlt	.+78     	; 0x65c <__vector_11+0x15a>
				j=6;
 60e:	26 e0       	ldi	r18, 0x06	; 6
 610:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <j.1635>
				if(min==60){
 614:	cc 97       	sbiw	r24, 0x3c	; 60
 616:	11 f5       	brne	.+68     	; 0x65c <__vector_11+0x15a>
					min=0;
 618:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <min+0x1>
 61c:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <min>
					j=6;
					LCD_Vid_GOTOXY(j,0);
 620:	60 e0       	ldi	r22, 0x00	; 0
 622:	86 e0       	ldi	r24, 0x06	; 6
 624:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
					LCD_Vid_Send_Number(0);
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
					LCD_Vid_GOTOXY(j+1,0);
 630:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <j.1635>
 634:	60 e0       	ldi	r22, 0x00	; 0
 636:	8f 5f       	subi	r24, 0xFF	; 255
 638:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_Vid_GOTOXY>
					LCD_Vid_Send_Number(0);
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 09 02 	call	0x412	; 0x412 <LCD_Vid_Send_Number>
					hr++;
 644:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <hr>
 648:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <hr+0x1>
 64c:	01 96       	adiw	r24, 0x01	; 1
 64e:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <hr+0x1>
 652:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <hr>
					if(hr>9){
						k=3;
					}
					j=7;
 656:	87 e0       	ldi	r24, 0x07	; 7
 658:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <j.1635>
				}
			}
			
			i=10;
 65c:	8a e0       	ldi	r24, 0x0A	; 10
 65e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	
	
	

	}
	if(count==20){
 662:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <count>
 666:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <count+0x1>
 66a:	44 97       	sbiw	r24, 0x14	; 20
 66c:	21 f4       	brne	.+8      	; 0x676 <__vector_11+0x174>

	
	count=0 ;
 66e:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <count+0x1>
 672:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <count>
}
}
 676:	ff 91       	pop	r31
 678:	ef 91       	pop	r30
 67a:	bf 91       	pop	r27
 67c:	af 91       	pop	r26
 67e:	9f 91       	pop	r25
 680:	8f 91       	pop	r24
 682:	7f 91       	pop	r23
 684:	6f 91       	pop	r22
 686:	5f 91       	pop	r21
 688:	4f 91       	pop	r20
 68a:	3f 91       	pop	r19
 68c:	2f 91       	pop	r18
 68e:	0f 90       	pop	r0
 690:	0f be       	out	0x3f, r0	; 63
 692:	0f 90       	pop	r0
 694:	1f 90       	pop	r1
 696:	18 95       	reti

00000698 <TIM0_Vid_Init>:


void TIM0_Vid_Init(void){
	
	/* select presclaer  */
	TCCR0_REG&=0b11111000 ; // start +  64 prescaler
 698:	83 b7       	in	r24, 0x33	; 51
 69a:	88 7f       	andi	r24, 0xF8	; 248
 69c:	83 bf       	out	0x33, r24	; 51
	TCCR0_REG|=TIMER0_PRESCALER ; // start +  64 prescaler
 69e:	83 b7       	in	r24, 0x33	; 51
 6a0:	83 60       	ori	r24, 0x03	; 3
 6a2:	83 bf       	out	0x33, r24	; 51
	
	/* ENABLE INTERRUPT  */
	SET_BIT(TIMSK_REG,0) ; 
 6a4:	89 b7       	in	r24, 0x39	; 57
 6a6:	81 60       	ori	r24, 0x01	; 1
 6a8:	89 bf       	out	0x39, r24	; 57
	/* ENABLE GLOBAL INTERRUPT  */
	GIE_Vid_Interrupt_Enable() ; 
 6aa:	0e 94 51 01 	call	0x2a2	; 0x2a2 <GIE_Vid_Interrupt_Enable>
 6ae:	08 95       	ret

000006b0 <__umulhisi3>:
 6b0:	a2 9f       	mul	r26, r18
 6b2:	b0 01       	movw	r22, r0
 6b4:	b3 9f       	mul	r27, r19
 6b6:	c0 01       	movw	r24, r0
 6b8:	a3 9f       	mul	r26, r19
 6ba:	70 0d       	add	r23, r0
 6bc:	81 1d       	adc	r24, r1
 6be:	11 24       	eor	r1, r1
 6c0:	91 1d       	adc	r25, r1
 6c2:	b2 9f       	mul	r27, r18
 6c4:	70 0d       	add	r23, r0
 6c6:	81 1d       	adc	r24, r1
 6c8:	11 24       	eor	r1, r1
 6ca:	91 1d       	adc	r25, r1
 6cc:	08 95       	ret

000006ce <_exit>:
 6ce:	f8 94       	cli

000006d0 <__stop_program>:
 6d0:	ff cf       	rjmp	.-2      	; 0x6d0 <__stop_program>
